// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  TEACHER
}

// !TODO: add full fields to the models, it's necessary!!!!!!
// These models aren't finished, remember!! 

model User {
  id       String @id @default(uuid())
  fullname String
  email    String @unique
  password String

  phone String @default("none")
  bio   String @default("none")

  role      Role    @default(USER)
  isTeacher Boolean @default(false)

  comments Comment[]
  discussions Discussion[]
  opinions Opinion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id       String   @id @default(uuid())
  title    String
  content  String
  imageUrl String[] @default([])

  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id      String @id @default(uuid())
  content String

  authorId String
  author   User   @relation(fields: [authorId], references: [id])
  newsId   String
  news     News   @relation(fields: [newsId], references: [id])

  createdAt DateTime @default(now())
}

model Discussion {
  id       String   @id @default(uuid())
  title    String
  content  String?

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  opinions Opinion[]

  isApproved Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Opinion {
  id      String @id @default(uuid())
  content String

  authorId String
  author   User   @relation(fields: [authorId], references: [id])
  discussionId String
  discussion Discussion @relation(fields: [discussionId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}